@*
    // ***	 ** ****** ****** ****** ******* **     ** ****** ***   ** **** ****
    // ****  ** **  ** **  ** **  **  **  **  **   **  **  ** ****  ** *    *
    // ** ** ** **  ** ****** ******  **  **   ** **   ****** ** ** ** *    ***
    // **  **** **  ** **	  **  **  **  **    ***    **  ** **  **** *    *
    // **   *** ****** **	  **  ** *******     *     **  ** **   *** **** ****
    //
    // **************************************************************************
    // *                                                                		*
	// *          YouTube product videos Plugin by NopAdvance team              *
    // *			Copyright (c) NopAdvance LLP. All Rights Reserved			*
    // *                                                                       	*
    // **************************************************************************
    // *                                                                       	*
    // * Email:		contact@nopadvance.com										*
    // * Website:	https://nopadvance.com										*
    // *                                                                       	*
    // **************************************************************************
    // *                                                                       	*
    // * Please see the  License file for the full End User License Agreement. 	*
    // * The  complete license agreement is also available on  our  website at 	*
    // * https://nopadvance.com/license-terms									*
    // *                                                                       	*
    // * This  software / plugin  is furnished  under a license  and  may   be  *
    // * used  and modified  only in accordance with the terms of such license  *
    // * and with the inclusion of the above copyright notice.  This  software	*
    // * or any other copies thereof may not be  provided  or  otherwise  made	*
    // * available  to any other person.  No title to  and  ownership  of  the  *
    // * software is hereby transferred.                                        *
    // *                                                                       	*
    // * You may not reverse  engineer, decompile, defeat  license  encryption 	*
    // * mechanisms  or  disassemble this software product or software product 	*
    // * license.  NopAdvance may terminate this  license if you don't  comply 	*
    // * with any of the terms & conditions set forth in our  end user license	*
    // * agreement (EULA).  In such event , licensee agrees to return licensor	*
    // * or destroy  all copies of software  upon termination  of the license.	*
    // *                                                                       	*
    // **************************************************************************
*@
@model ProductYouTubeVideoProductModel
@using Nop.Web.Framework.Models.DataTables
@using Microsoft.AspNetCore.Routing

<div class="card-body">
    @if (Model.Id > 0)
    {
        @await Html.PartialAsync("Table", new DataTablesModel
        {
            Name = "productyoutubevideos-grid",
            UrlRead = new DataUrl("ProductYouTubeVideoList", SiteMapDefaults.ADMIN_CONTROLLER_NAME, new RouteValueDictionary { [nameof(Model.ProductYouTubeVideoSearchModel.ProductId)] = Model.ProductYouTubeVideoSearchModel.ProductId }),
            UrlDelete = new DataUrl("ProductYouTubeVideoDelete", SiteMapDefaults.ADMIN_CONTROLLER_NAME, null),
            UrlUpdate = new DataUrl("ProductYouTubeVideoUpdate", SiteMapDefaults.ADMIN_CONTROLLER_NAME, null),
            Length = Model.ProductYouTubeVideoSearchModel.PageSize,
            LengthMenu = Model.ProductYouTubeVideoSearchModel.AvailablePageSizes,
            ColumnCollection = new List<ColumnProperty>
                {
                    new ColumnProperty(nameof(ProductYouTubeVideoModel.PictureUrl))
                    {
                        Title = T(LocaleResourceDefaults.THUMBNAIL).Text,
                        Render = new RenderCustom("renderPicturesColumnProductYouTubePictureUrl"),
                        Width="100"

                    },
                    new ColumnProperty(nameof(ProductYouTubeVideoModel.VideoUrl))
                    {
                        Title = T(LocaleResourceDefaults.VIDEO_URL).Text,
                        Width = "200"
                    },
                    new ColumnProperty(nameof(ProductYouTubeVideoModel.DisplayOrder))
                    {
                        Title = T(LocaleResourceDefaults.DISPLAY_ORDER).Text,
                        Width = "100",
                        ClassName = NopColumnClassDefaults.CenterAll,
                        Editable = true,
                        EditType = EditType.Number
                    },
                    new ColumnProperty(nameof(ProductYouTubeVideoModel.Id))
                    {
                        Title = T("Admin.Common.Edit").Text,
                        Width = "50",
                        ClassName =  NopColumnClassDefaults.Button,
                        Render = new RenderButtonsInlineEdit()
                    },
                    new ColumnProperty(nameof(ProductYouTubeVideoModel.Id))
                    {
                        Title = T("Admin.Common.Delete").Text,
                        Width = "50",
                        Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                        ClassName = NopColumnClassDefaults.Button
                    }
                }
        })

        <script>
            function renderPicturesColumnProductYouTubePictureUrl(data, type, row, meta) {
                return '<a href="' + row.PictureUrl + '" target="_blank"><img alt="' + row.PictureId + '" src="' + row.PictureUrl + '" width="150" /></a>';
            }
        </script>

        <div class="card card-default">
            <div class="card-header">
                @T(LocaleResourceDefaults.YOUTUBE_VIDEO_ADD_NEW)
            </div>
            <div class="card-body">
                <script>
                        $(document).ready(function () {
                            $("#addProductYouTubeVideo").click(function () {
                                var videoUrl = $("#@Html.IdFor(model => model.AddYouTubeVideoModel.VideoUrl)").val();
                                var displayOrder = $("#@Html.IdFor(model => model.AddYouTubeVideoModel.DisplayOrder)").val();
                                if (videoUrl.length === 0 && (videoUrl === null || videoUrl === "")) {
                                    $("#addProductYouTubeVideoAlert").click();
                                    return;
                                }

                               $('#addProductYouTubeVideo').attr('disabled', true);

                                var postData = {
                                    videoUrl: videoUrl.trim(),
                                    displayOrder: displayOrder,
                                    productId: '@Model.Id'
                                };
                                addAntiForgeryToken(postData);
                                $.ajax({
                                    cache: false,
                                    type: "POST",
                                    url: "@(Url.Action("ProductYouTubeVideoAdd", SiteMapDefaults.ADMIN_CONTROLLER_NAME))",
                                    data: postData,
                                    success: function (data, textStatus, jqXHR) {
                                        //already exist error
                                        if (!data.Result && data.alreadyExistsYoutubeUrl) {
                                            $("#addProductYouTubeVideoAlreadyExists").click();
                                            return;
                                        }
                                        //wrong URl error
                                        if (!data.Result && data.isWrongUrl) {
                                            $("#addProductYouTubeVideoWrongUrlError").click();
                                            return;
                                        }

                                        updateTable('#productyoutubevideos-grid');
                                        $("#@Html.IdFor(model => model.AddYouTubeVideoModel.VideoUrl)").val('');
                                        document.getElementById('youtube-iframe').setAttribute('src', '');
                                        $("#videopnl").hide();
                                        $("#@Html.IdFor(model => model.AddYouTubeVideoModel.DisplayOrder)").data("kendoNumericTextBox").value(0);
                                    },
                                    error: function (jqXHR, textStatus, errorThrown) {
                                        $("#addProductYouTubeVideoError").click();
                                    },
                                    complete: function (jqXHR, textStatus) {
                                        $('#addProductYouTubeVideo').attr('disabled', false);
                                    }
                                });
                            });

                        });
                </script>
                <div class="form-group row">
                    <div class="col-md-3">
                        <nop-label asp-for="AddYouTubeVideoModel.VideoUrl" />
                    </div>
                    <div class="col-md-9">
                        <nop-editor asp-for="AddYouTubeVideoModel.VideoUrl" />
                        <span asp-validation-for="AddYouTubeVideoModel.VideoUrl"></span>
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-9 offset-md-3">
                        <button type="button" id="loadProductYouTubeVideo" class="btn btn-primary">@T(LocaleResourceDefaults.VIDEO_URL_LOAD)</button>
                    </div>
                </div>
                <div id="videopnl" class="form-group row">
                    <div class="col-md-9 offset-md-3">
                        <div class="video-container">
                            <iframe id="youtube-iframe" width="50%" height="445" src="">
                            </iframe>
                        </div>
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-3">
                        <nop-label asp-for="AddYouTubeVideoModel.DisplayOrder" />
                    </div>
                    <div class="col-md-9">
                        <nop-editor asp-for="AddYouTubeVideoModel.DisplayOrder" />
                        <span asp-validation-for="AddYouTubeVideoModel.DisplayOrder"></span>
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-9 offset-md-3">
                        <button type="button" id="addProductYouTubeVideo" class="btn btn-primary">@T(LocaleResourceDefaults.YOUTUBE_VIDEO_ADD_BUTTON)</button>
                    </div>
                </div>
            </div>
        </div>

        <script>
            $(document).ready(function () {
                $("#videopnl").hide();
                $("#loadProductYouTubeVideo").click(function () {
                    if ($("#@Html.IdFor(model => model.AddYouTubeVideoModel.VideoUrl)").val() != ""
                        && $("#@Html.IdFor(model => model.AddYouTubeVideoModel.VideoUrl)").val() != null) {

                        $("#videopnl").show();
                        $(".video-container").css("display", "block");

                        const videoId = getId($("#@Html.IdFor(model => model.AddYouTubeVideoModel.VideoUrl)").val());
                        $("#youtube-iframe").attr('src', "https://www.youtube.com/embed/" + videoId);
                    } else {
                        $("#addProductYouTubeVideoAlert").click();
                    }
                });

                function getId(url) {
                    const regExp = /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/;
                    const match = url.match(regExp);

                    return (match && match[2].length === 11)
                        ? match[2]
                        : null;
                }
            });
        </script>
    }
    else
    {
        <div class="card card-default">
            <div class="card-body">
                @T(LocaleResourceDefaults.YOUTUBE_VIDEOS_SAVEBEFOREEDIT)
            </div>
        </div>
    }
</div>
<nop-alert asp-alert-id="addProductYouTubeVideoAlert" asp-alert-message="@T(LocaleResourceDefaults.YOUTUBE_VIDEO_ADD_NEW_ALERT)" />
<nop-alert asp-alert-id="addProductYouTubeVideoError" asp-alert-message="@T(LocaleResourceDefaults.YOUTUBE_VIDEO_ADD_NEW_ERROR)" />
<nop-alert asp-alert-id="addProductYouTubeVideoWrongUrlError" asp-alert-message="@T(LocaleResourceDefaults.YOUTUBE_VIDEO_ADD_NEW_WRONG_URL_ERROR)" />
<nop-alert asp-alert-id="addProductYouTubeVideoAlreadyExists" asp-alert-message="@T(LocaleResourceDefaults.YOUTUBE_VIDEO_ADD_ALREADY_EXISTS_URL_ERROR)" />
